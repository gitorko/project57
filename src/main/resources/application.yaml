spring:
  main:
    banner-mode: "off"
    lazy-initialization: false
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      maximumPoolSize: 5
      connectionTimeout: 1000
      idleTimeout: 60
      maxLifetime: 180
  jpa:
    show-sql: false
    hibernate.ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    defer-datasource-initialization: true
    properties:
      hibernate:
        show_sql: false
        format_sql: true
    open-in-view: false
  sql:
    init:
      mode: always
  threads:
    virtual:
      enabled: false
  cloud:
    config:
      enabled: false
  task:
    execution:
      simple:
        concurrency-limit: 10
    scheduling:
      simple:
        concurrency-limit: 10
  mvc:
    async:
      request-timeout: 5000
server:
  http2:
    enabled: false
  port: 8080
  compression:
    enabled: true
    # Minimum response when compression will kick in
    min-response-size: 512
    # Mime types that should be compressed
    mime-types: text/xml, text/plain, application/json
  tomcat:
    connection-timeout: 500
    threads:
      max: 10 # Maximum amount of worker threads.
      min-spare: 10 # Minimum amount of worker threads.
    max-connections: 10 # Maximum number of connections that the server accepts and processes.
    max-keep-alive-requests: 10
    keep-alive-timeout: 10
    accept-count: 100 # Maximum queue size for incoming connection requests
  error:
    include-binding-errors: always
    include-exception: false
    include-message: always
    include-path: always
    include-stacktrace: never

resilience4j:
  timelimiter:
    instances:
      project57-t1:
        timeoutDuration: 5s
        cancelRunningFuture: true
    metrics:
      enabled: true
  ratelimiter:
    instances:
      project57-r1:
        limit-for-period: 5
        limit-refresh-period: 1s
        timeout-duration: 0s
    metrics:
      enabled: true
  bulkhead:
    instances:
      project57-b1:
        max-concurrent-calls: 2
        max-wait-duration: 10ms
    metrics:
      enabled: true
  retry:
    instances:
      project57-y1:
        max-attempts: 3
        waitDuration: 10s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - org.springframework.web.client.HttpClientErrorException
        ignoreExceptions:
          - org.springframework.web.client.HttpServerErrorException
    metrics:
      enabled: true
  circuitbreaker:
    instances:
      project57-c1:
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count_based
    metrics:
      enabled: true

logging:
  pattern:
    level: '%5p [${HOSTNAME:}]'
  level:
    root: info
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.orm.jdbc.bind: TRACE
  file:
    name: logs/project57-app-${HOSTNAME}.log
  logback:
    rollingpolicy:
      file-name-pattern: logs/%d{yyyy-MM, aux}/project57-app-${HOSTNAME}.%d{yyyy-MM-dd}.%i.log
      max-file-size: 100MB
      total-size-cap: 10GB
      max-history: 10

management:
  endpoint:
    refresh:
      enabled: true
    health:
      enabled: true
      show-details: always
      show-components: always
    metrics:
      enabled: true
    info:
      env:
        enabled: true
      enabled: true
    env:
      post:
        enabled: true
  endpoints:
    web:
      exposure:
        include: '*'

project57:
  newFeatureFlag: false
