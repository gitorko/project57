apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: manual
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project57
  labels:
    app: project57
spec:
  selector:
    matchLabels:
      app: project57
  replicas: 1
  template:
    metadata:
      labels:
        app: project57
    spec:
      containers:
        - name: project57
          envFrom:
            - configMapRef:
                name: db-config
          image: project57:1.0.0
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
            - containerPort: 8085
          resources:
            requests:
              cpu: "250m"
              memory: "1Gi"
            limits:
              cpu: "2"
              memory: "1Gi"
          volumeMounts:
            - name: logs
              mountPath: /var/app/logs
      volumes:
        - name: logs
          persistentVolumeClaim:
            claimName: log-pv-claim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-config
  labels:
    app: db-server
data:
  POSTGRES_DB: test-db
  POSTGRES_USER: test
  POSTGRES_PASSWORD: test@123
  POSTGRES_HOST: db-server
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-pv
  labels:
    type: local
    app: db-server
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/tmp/data"
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: log-pv
  labels:
    type: local
    app: project57
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/tmp/logs"
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pv-claim
  labels:
    app: db-server
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: log-pv-claim
  labels:
    app: project57
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-server
  labels:
    app: db-server
spec:
  selector:
    matchLabels:
      app: db-server
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: db-server
    spec:
      containers:
        - image: postgres:14
          name: postgres
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: db-config
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db-data
              mountPath: /var/data
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: db-server
  labels:
    app: db-server
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: db-server
---
apiVersion: v1
kind: Service
metadata:
  name: project57
  labels:
    app: project57
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
    - port: 8085
      targetPort: 8085
      name: jvm
  selector:
    app: project57
  type: LoadBalancer
